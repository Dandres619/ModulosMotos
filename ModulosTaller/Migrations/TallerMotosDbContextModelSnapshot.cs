// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModulosTaller.Models;

#nullable disable

namespace ModulosTaller.Migrations
{
    [DbContext(typeof(TallerMotosDbContext))]
    partial class TallerMotosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModulosTaller.Models.Agendamiento", b =>
                {
                    b.Property<int>("IdAgendamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgendamiento"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdClienteNavigationIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdHorario")
                        .HasColumnType("int");

                    b.Property<int?>("IdHorarioNavigationIdHorario")
                        .HasColumnType("int");

                    b.Property<int?>("IdMoto")
                        .HasColumnType("int");

                    b.Property<int?>("IdMotoNavigationIdMoto")
                        .HasColumnType("int");

                    b.HasKey("IdAgendamiento");

                    b.HasIndex("IdClienteNavigationIdCliente");

                    b.HasIndex("IdHorarioNavigationIdHorario");

                    b.HasIndex("IdMotoNavigationIdMoto");

                    b.ToTable("Agendamientos");
                });

            modelBuilder.Entity("ModulosTaller.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCategoria");

                    b.ToTable("CategoriaProductos");
                });

            modelBuilder.Entity("ModulosTaller.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ModulosTaller.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<bool>("EstaAnulada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedorNavigationIdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdProveedorNavigationIdProveedor");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("ModulosTaller.Models.CompraDetalle", b =>
                {
                    b.Property<int>("IdCompraDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompraDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompraNavigationIdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoNavigationIdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdCompraDetalle");

                    b.HasIndex("IdCompraNavigationIdCompra");

                    b.HasIndex("IdProductoNavigationIdProducto");

                    b.ToTable("CompraDetalles");
                });

            modelBuilder.Entity("ModulosTaller.Models.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("DiaSemana")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("HoraInicio")
                        .HasColumnType("time");

                    b.HasKey("IdHorario");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("ModulosTaller.Models.Motocicleta", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdClienteNavigationIdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMoto");

                    b.HasIndex("IdClienteNavigationIdCliente");

                    b.ToTable("Motocicletas");
                });

            modelBuilder.Entity("ModulosTaller.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("ModulosTaller.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdCategoriaNavigationIdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoriaNavigationIdCategoria");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ModulosTaller.Models.Proveedore", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("ModulosTaller.Models.RolPermiso", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdPermiso");

                    b.HasIndex("IdPermiso");

                    b.ToTable("RolPermiso", (string)null);
                });

            modelBuilder.Entity("ModulosTaller.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ModulosTaller.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("IdRolNavigationIdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRolNavigationIdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ModulosTaller.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdClienteNavigationIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompraNavigationIdCompra")
                        .HasColumnType("int");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdClienteNavigationIdCliente");

                    b.HasIndex("IdCompraNavigationIdCompra");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ModulosTaller.Models.VentaDetalle", b =>
                {
                    b.Property<int>("IdVentaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVentaDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoNavigationIdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<int?>("IdVentaNavigationIdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdVentaDetalle");

                    b.HasIndex("IdProductoNavigationIdProducto");

                    b.HasIndex("IdVentaNavigationIdVenta");

                    b.ToTable("VentaDetalles");
                });

            modelBuilder.Entity("PermisoRole", b =>
                {
                    b.Property<int>("PermisosIdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("RolesIdRol")
                        .HasColumnType("int");

                    b.HasKey("PermisosIdPermiso", "RolesIdRol");

                    b.HasIndex("RolesIdRol");

                    b.ToTable("PermisoRole");
                });

            modelBuilder.Entity("ModulosTaller.Models.Agendamiento", b =>
                {
                    b.HasOne("ModulosTaller.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Agendamientos")
                        .HasForeignKey("IdClienteNavigationIdCliente");

                    b.HasOne("ModulosTaller.Models.Horario", "IdHorarioNavigation")
                        .WithMany("Agendamientos")
                        .HasForeignKey("IdHorarioNavigationIdHorario");

                    b.HasOne("ModulosTaller.Models.Motocicleta", "IdMotoNavigation")
                        .WithMany("Agendamientos")
                        .HasForeignKey("IdMotoNavigationIdMoto");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdMotoNavigation");
                });

            modelBuilder.Entity("ModulosTaller.Models.Compra", b =>
                {
                    b.HasOne("ModulosTaller.Models.Proveedore", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedorNavigationIdProveedor");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("ModulosTaller.Models.CompraDetalle", b =>
                {
                    b.HasOne("ModulosTaller.Models.Compra", "IdCompraNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdCompraNavigationIdCompra");

                    b.HasOne("ModulosTaller.Models.Producto", "IdProductoNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdProductoNavigationIdProducto");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("ModulosTaller.Models.Motocicleta", b =>
                {
                    b.HasOne("ModulosTaller.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Motocicleta")
                        .HasForeignKey("IdClienteNavigationIdCliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("ModulosTaller.Models.Producto", b =>
                {
                    b.HasOne("ModulosTaller.Models.CategoriaProducto", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaNavigationIdCategoria");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("ModulosTaller.Models.RolPermiso", b =>
                {
                    b.HasOne("ModulosTaller.Models.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdPermiso")
                        .IsRequired();

                    b.HasOne("ModulosTaller.Models.Role", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdRol")
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ModulosTaller.Models.Usuario", b =>
                {
                    b.HasOne("ModulosTaller.Models.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRolNavigationIdRol");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("ModulosTaller.Models.Venta", b =>
                {
                    b.HasOne("ModulosTaller.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdClienteNavigationIdCliente");

                    b.HasOne("ModulosTaller.Models.Compra", "IdCompraNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCompraNavigationIdCompra");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdCompraNavigation");
                });

            modelBuilder.Entity("ModulosTaller.Models.VentaDetalle", b =>
                {
                    b.HasOne("ModulosTaller.Models.Producto", "IdProductoNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("IdProductoNavigationIdProducto");

                    b.HasOne("ModulosTaller.Models.Venta", "IdVentaNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("IdVentaNavigationIdVenta");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("PermisoRole", b =>
                {
                    b.HasOne("ModulosTaller.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosIdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModulosTaller.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesIdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModulosTaller.Models.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ModulosTaller.Models.Cliente", b =>
                {
                    b.Navigation("Agendamientos");

                    b.Navigation("Motocicleta");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ModulosTaller.Models.Compra", b =>
                {
                    b.Navigation("CompraDetalles");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ModulosTaller.Models.Horario", b =>
                {
                    b.Navigation("Agendamientos");
                });

            modelBuilder.Entity("ModulosTaller.Models.Motocicleta", b =>
                {
                    b.Navigation("Agendamientos");
                });

            modelBuilder.Entity("ModulosTaller.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("ModulosTaller.Models.Producto", b =>
                {
                    b.Navigation("CompraDetalles");

                    b.Navigation("VentaDetalles");
                });

            modelBuilder.Entity("ModulosTaller.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("ModulosTaller.Models.Role", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ModulosTaller.Models.Venta", b =>
                {
                    b.Navigation("VentaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
