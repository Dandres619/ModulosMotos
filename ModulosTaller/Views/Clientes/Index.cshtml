@model IEnumerable<ModulosTaller.Models.Cliente>

@{
    ViewData["Title"] = "Clientes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.AntiForgeryToken()

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="fas fa-users mr-2"></i>Clientes
        </h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-circle mr-1"></i> Nuevo Cliente
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show auto-dismiss" role="alert" data-dismiss-time="5000">
            <div class="d-flex align-items-center">
                <i class="fas fa-check-circle fa-lg mr-3"></i>
                <div>
                    <h5 class="alert-heading mb-1">¡Éxito!</h5>
                    <p class="mb-0">@TempData["SuccessMessage"]</p>
                </div>
            </div>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show auto-dismiss" role="alert" data-dismiss-time="5000">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-triangle fa-lg mr-3"></i>
                <div>
                    <h5 class="alert-heading mb-1">¡Error!</h5>
                    <p class="mb-0">@TempData["ErrorMessage"]</p>
                </div>
            </div>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["WarningMessage"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show auto-dismiss" role="alert" data-dismiss-time="5000">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-circle fa-lg mr-3"></i>
                <div>
                    <h5 class="alert-heading mb-1">Advertencia</h5>
                    <p class="mb-0">@TempData["WarningMessage"]</p>
                </div>
            </div>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info alert-dismissible fade show auto-dismiss" role="alert" data-dismiss-time="5000">
            <div class="d-flex align-items-center">
                <i class="fas fa-info-circle fa-lg mr-3"></i>
                <div>
                    <h5 class="alert-heading mb-1">Información</h5>
                    <p class="mb-0">@TempData["InfoMessage"]</p>
                </div>
            </div>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <!-- Card de Búsqueda y Filtros -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-search mr-2"></i>Buscar Clientes
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="searchInput"><i class="fas fa-filter mr-2"></i>Buscar por nombre, documento o correo:</label>
                        <input type="text" class="form-control" id="searchInput" placeholder="Escribe para filtrar...">
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="statusFilter"><i class="fas fa-filter mr-2"></i>Filtrar por estado:</label>
                        <select class="form-control" id="statusFilter">
                            <option value="all">Todos</option>
                            <option value="active">Activos</option>
                            <option value="inactive">Inactivos</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="documentTypeFilter"><i class="fas fa-filter mr-2"></i>Tipo de documento:</label>
                        <select class="form-control" id="documentTypeFilter">
                            <option value="all">Todos</option>
                            <option value="CC">Cédula de Ciudadanía</option>
                            <option value="CE">Cédula de Extranjería</option>
                            <option value="TI">Tarjeta de Identidad</option>
                            <option value="PAS">Pasaporte</option>
                            <option value="NIT">NIT</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Card de Lista de Clientes -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-list mr-2"></i>Lista de Clientes
                <span id="clientCount" class="badge badge-primary ml-2"></span>
            </h6>
            <div>
                <button id="btnExport" class="btn btn-success btn-sm">
                    <i class="fas fa-file-excel mr-1"></i> Exportar
                </button>
                <button id="btnRefresh" class="btn btn-info btn-sm ml-1">
                    <i class="fas fa-sync-alt mr-1"></i> Actualizar
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="clientesTable" width="100%" cellspacing="0">
                    <thead class="thead-dark">
                        <tr>
                            <th><i class="fas fa-id-card mr-1"></i> Documento</th>
                            <th><i class="fas fa-user mr-1"></i> Nombre Completo</th>
                            <th><i class="fas fa-phone mr-1"></i> Teléfono</th>
                            <th><i class="fas fa-envelope mr-1"></i> Correo</th>
                            <th><i class="fas fa-calendar mr-1"></i> Fecha Registro</th>
                            <th><i class="fas fa-circle mr-1"></i> Estado</th>
                            <th><i class="fas fa-cogs mr-1"></i> Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="client-row" data-status="@(item.Estado ? "active" : "inactive")" data-document-type="@item.TipoDocumento">
                                <td>
                                    <span class="badge badge-secondary">@item.TipoDocumento</span>
                                    <br>
                                    <strong>@item.Documento</strong>
                                </td>
                                <td>
                                    <strong>@($"{item.PrimerNombre} {item.SegundoNombre ?? ""} {item.PrimerApellido} {item.SegundoApellido ?? ""}".Trim().Replace("  ", " "))</strong>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Telefono))
                                    {
                                        <i class="fas fa-phone text-success mr-1"></i>
                                        @item.Telefono
                                    }
                                    else
                                    {
                                        <span class="text-muted"><i class="fas fa-phone-slash mr-1"></i>No especificado</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Correo))
                                    {
                                        <i class="fas fa-envelope text-primary mr-1"></i>
                                        <a href="mailto:@item.Correo" class="text-decoration-none" title="Enviar correo">@item.Correo</a>
                                    }
                                    else
                                    {
                                        <span class="text-muted"><i class="fas fa-envelope mr-1"></i>No especificado</span>
                                    }
                                </td>
                                <td>
                                    <small class="text-muted">@item.FechaRegistro.ToString("dd/MM/yyyy")</small>
                                </td>
                                <td>
                                    @if (item.Estado)
                                    {
                                        <span class="badge badge-success">
                                            <i class="fas fa-check-circle mr-1"></i>ACTIVO
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">
                                            <i class="fas fa-times-circle mr-1"></i>INACTIVO
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group-vertical btn-group-sm" role="group">
                                        <!-- Botón Ver Detalles (Eye) -->
                                        <a asp-action="Details" asp-route-id="@item.IdCliente"
                                           class="btn btn-info btn-action"
                                           title="Ver detalles completos"
                                           data-toggle="tooltip">
                                            <i class="fas fa-eye"></i>
                                        </a>

                                        <!-- Botón Editar (Edit) -->
                                        <a asp-action="Edit" asp-route-id="@item.IdCliente"
                                           class="btn btn-warning btn-action"
                                           title="Editar cliente"
                                           data-toggle="tooltip">
                                            <i class="fas fa-edit"></i>
                                        </a>

                                        <!-- Botones condicionales según estado -->
                                        @if (item.Estado)
                                        {
                                            <!-- Botón para Inactivar (Ban) -->
                                            <form asp-action="Inactivar" method="post" class="d-inline">
                                                <input type="hidden" name="id" value="@item.IdCliente" />
                                                <button type="submit"
                                                        class="btn btn-warning btn-action"
                                                        title="Inactivar cliente"
                                                        data-toggle="tooltip"
                                                        onclick="return confirm('¿Está seguro de inactivar este cliente?')">
                                                    <i class="fas fa-ban"></i>
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <!-- Botón para Activar (Check) -->
                                            <form asp-action="Activar" method="post" class="d-inline">
                                                <input type="hidden" name="id" value="@item.IdCliente" />
                                                <button type="submit"
                                                        class="btn btn-success btn-action"
                                                        title="Activar cliente"
                                                        data-toggle="tooltip"
                                                        onclick="return confirm('¿Está seguro de reactivar este cliente?')">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </form>

                                            <!-- Botón para Eliminar (Trash) -->
                                            <a asp-action="Delete" asp-route-id="@item.IdCliente"
                                               class="btn btn-danger btn-action"
                                               title="Eliminar permanentemente"
                                               data-toggle="tooltip">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Mensaje cuando no hay resultados -->
            <div id="noResults" class="text-center d-none">
                <i class="fas fa-search fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No se encontraron clientes</h4>
                <p class="text-muted">Intenta con otros términos de búsqueda</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Inicializar tooltips
            $('[data-toggle="tooltip"]').tooltip();

            // Función para auto-desaparecer alertas
            function initAutoDismissAlerts() {
                $('.alert.auto-dismiss').each(function() {
                    var alert = $(this);
                    var dismissTime = alert.data('dismiss-time') || 5000;

                    setTimeout(function() {
                        alert.fadeTo(500, 0).slideUp(500, function() {
                            alert.remove();
                        });
                    }, dismissTime);
                });
            }

            // Inicializar auto-dismiss
            initAutoDismissAlerts();

            // Cerrar alertas al hacer clic en la X
            $('.alert .close').on('click', function() {
                $(this).closest('.alert').fadeTo(500, 0).slideUp(500, function() {
                    $(this).remove();
                });
            });

            // Función para filtrar la tabla
            function filterTable() {
                var searchText = $('#searchInput').val().toLowerCase();
                var statusFilter = $('#statusFilter').val();
                var documentTypeFilter = $('#documentTypeFilter').val();

                var visibleRows = 0;

                $('.client-row').each(function() {
                    var row = $(this);
                    var rowText = row.text().toLowerCase();
                    var rowStatus = row.data('status');
                    var rowDocumentType = row.data('document-type');

                    var matchesSearch = searchText === '' || rowText.indexOf(searchText) > -1;
                    var matchesStatus = statusFilter === 'all' ||
                                      (statusFilter === 'active' && rowStatus === 'active') ||
                                      (statusFilter === 'inactive' && rowStatus === 'inactive');
                    var matchesDocumentType = documentTypeFilter === 'all' ||
                                            rowDocumentType === documentTypeFilter;

                    if (matchesSearch && matchesStatus && matchesDocumentType) {
                        row.show();
                        visibleRows++;
                    } else {
                        row.hide();
                    }
                });

                // Mostrar/ocultar mensaje de no resultados
                if (visibleRows === 0) {
                    $('#noResults').removeClass('d-none');
                } else {
                    $('#noResults').addClass('d-none');
                }

                // Actualizar contador
                $('#clientCount').text(visibleRows + ' / @Model.Count()');
            }

            // Eventos para filtros
            $('#searchInput').on('keyup', function() {
                filterTable();
            });

            $('#statusFilter, #documentTypeFilter').on('change', function() {
                filterTable();
            });

            // Botón de actualizar
            $('#btnRefresh').on('click', function() {
                $('#searchInput').val('');
                $('#statusFilter').val('all');
                $('#documentTypeFilter').val('all');
                filterTable();
            });

            // Botón de exportar a Excel
            $('#btnExport').on('click', function() {
                exportToExcel();
            });

            // Función para exportar a Excel
            function exportToExcel() {
                var searchText = $('#searchInput').val();
                var statusFilter = $('#statusFilter').val();
                var documentTypeFilter = $('#documentTypeFilter').val();

                // Mostrar loading
                var exportBtn = $('#btnExport');
                var originalHtml = exportBtn.html();
                exportBtn.html('<i class="fas fa-spinner fa-spin mr-1"></i> Exportando...');
                exportBtn.prop('disabled', true);

                // Crear formulario temporal
                var form = $('<form>', {
                    method: 'POST',
                    action: '@Url.Action("ExportarExcel", "Clientes")'
                });

                // Agregar campos ocultos
                $('<input>').attr({
                    type: 'hidden',
                    name: 'filtroBusqueda',
                    value: searchText
                }).appendTo(form);

                $('<input>').attr({
                    type: 'hidden',
                    name: 'filtroEstado',
                    value: statusFilter
                }).appendTo(form);

                $('<input>').attr({
                    type: 'hidden',
                    name: 'filtroTipoDocumento',
                    value: documentTypeFilter
                }).appendTo(form);

                // Agregar token anti-falsificación
                $('<input>').attr({
                    type: 'hidden',
                    name: '__RequestVerificationToken',
                    value: $('input[name="__RequestVerificationToken"]').val()
                }).appendTo(form);

                // Enviar formulario
                form.appendTo('body').submit().remove();

                // Restaurar botón después de 2 segundos
                setTimeout(function() {
                    exportBtn.html(originalHtml);
                    exportBtn.prop('disabled', false);
                }, 2000);
            }

            // Inicializar contador
            $('#clientCount').text('@Model.Count() / @Model.Count()');

            // Efecto de carga en botones de acción
            $('.btn-action').hover(
                function() {
                    $(this).addClass('shadow');
                    $(this).css('transform', 'scale(1.1)');
                },
                function() {
                    $(this).removeClass('shadow');
                    $(this).css('transform', 'scale(1)');
                }
            );

            // Confirmación para formularios
            $('form').on('submit', function(e) {
                var button = $(this).find('button[type="submit"]');
                var action = button.hasClass('btn-warning') ? 'inactivar' : 'activar';

                if (!confirm('¿Está seguro de ' + action + ' este cliente?')) {
                    e.preventDefault();
                    return false;
                }

                // Mostrar loading en el botón
                button.prop('disabled', true);
                button.html('<i class="fas fa-spinner fa-spin"></i>');
            });
        });
    </script>

    <style>
        /* Estilos mejorados para las alertas */
        .alert {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            border-left: 5px solid;
        }

        .alert-success {
            border-left-color: #28a745;
            background: linear-gradient(135deg, #f8fff9 0%, #e8f5e9 100%);
        }

        .alert-danger {
            border-left-color: #dc3545;
            background: linear-gradient(135deg, #fff8f8 0%, #ffebee 100%);
        }

        .alert-warning {
            border-left-color: #ffc107;
            background: linear-gradient(135deg, #fffbf0 0%, #fff3cd 100%);
        }

        .alert-info {
            border-left-color: #17a2b8;
            background: linear-gradient(135deg, #f0f9ff 0%, #e3f2fd 100%);
        }

        .alert .fa-lg {
            font-size: 1.5rem;
        }

        .alert-heading {
            font-weight: 600;
            font-size: 1.1rem;
        }

        .alert .close {
            opacity: 0.8;
            font-size: 1.2rem;
        }

            .alert .close:hover {
                opacity: 1;
            }

        .client-row:hover {
            background-color: #f8f9fa;
            transition: background-color 0.3s ease;
        }

        .btn {
            transition: all 0.3s ease;
            border-radius: 0.35rem;
        }

        .table-hover tbody tr:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

        .badge {
            font-weight: 600;
            padding: 0.5em 0.8em;
        }

        /* Botones de acción pequeños - Estilo Figma */
        .btn-action {
            border: none;
            margin: 2px 0;
            padding: 0.5rem;
            min-width: 35px;
            height: 35px;
            color: white !important;
            font-weight: 600;
            font-size: 0.875rem;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Colores según Figma */
        .btn-info {
            background-color: #3b82f6 !important;
            border-color: #3b82f6 !important;
        }

            .btn-info:hover {
                background-color: #2563eb !important;
                border-color: #2563eb !important;
                transform: scale(1.05);
            }

        .btn-warning {
            background-color: #f59e0b !important;
            border-color: #f59e0b !important;
        }

            .btn-warning:hover {
                background-color: #d97706 !important;
                border-color: #d97706 !important;
                transform: scale(1.05);
            }

        .btn-danger {
            background-color: #ef4444 !important;
            border-color: #ef4444 !important;
        }

            .btn-danger:hover {
                background-color: #dc2626 !important;
                border-color: #dc2626 !important;
                transform: scale(1.05);
            }

        .btn-success {
            background-color: #10b981 !important;
            border-color: #10b981 !important;
        }

            .btn-success:hover {
                background-color: #059669 !important;
                border-color: #059669 !important;
                transform: scale(1.05);
            }

        /* Iconos dentro de botones - Tamaño Figma */
        .btn-action i {
            font-size: 1em;
            color: white;
        }

        /* Grupo de botones vertical */
        .btn-group-vertical {
            display: flex;
            flex-direction: column;
            gap: 4px;
        }

            .btn-group-vertical > .btn,
            .btn-group-vertical > form {
                margin: 1px 0;
            }

        /* Efecto hover en botones - Estilo Figma */
        .btn-action:hover {
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            color: white !important;
        }

        /* Animación para alertas */
        .alert {
            transition: all 0.5s ease;
        }

        /* Espaciado en celdas de acciones */
        td:last-child {
            min-width: 60px;
            text-align: center;
        }

        /* Botones del header */
        .btn-sm i {
            margin-right: 0.3rem;
        }

        /* Badges de estado - Colores Figma */
        .badge-success {
            background-color: #10b981;
            border: none;
            color: white;
        }

        .badge-danger {
            background-color: #ef4444;
            border: none;
            color: white;
        }

        .badge-secondary {
            background-color: #6b7280;
            border: none;
            color: white;
        }

        /* Estilos para formularios inline */
        form.d-inline {
            display: block;
            margin: 2px 0;
        }

        /* Responsive para móviles */
        @@media (max-width: 768px) {
            .btn-action {
                padding: 0.4rem;
                min-width: 32px;
                height: 32px;
            }

                .btn-action i {
                    font-size: 0.9em;
                }

            td:last-child {
                min-width: 50px;
            }

            .btn-group-vertical {
                gap: 2px;
            }

            .alert .d-flex {
                flex-direction: column;
                text-align: center;
            }

            .alert .fa-lg {
                margin-bottom: 10px;
            }
        }

        /* Efectos de transición mejorados */
        .btn-action {
            transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .table-hover tbody tr {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        /* Sombras mejoradas */
        .btn-action:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        /* Focus states para accesibilidad */
        .btn-action:focus {
            outline: 2px solid #3b82f6;
            outline-offset: 2px;
        }
    </style>
}